name: Build Multi-Platform

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

# Add permissions for GitHub token
permissions:
  contents: write
  pull-requests: read

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
          sudo apt-get install -y libssl-dev pkg-config build-essential curl wget file

      - name: Install dependencies (macOS only)
        if: matrix.platform == 'macos-latest'
        run: |
          # Install required dependencies for macOS
          echo "Installing macOS dependencies..."

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm install

      - name: Debug info
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Rust version: $(rustc --version)"
          echo "Cargo version: $(cargo --version)"
          echo "Platform: ${{ matrix.platform }}"

      - name: Build the app
        run: |
          npm run tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}
          path: |
            src-tauri/target/release/bundle/
            src-tauri/target/release/*.exe
            src-tauri/target/release/*.app
            src-tauri/target/release/*.deb
            src-tauri/target/release/*.dmg
